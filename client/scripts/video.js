// Generated by CoffeeScript 1.6.3
(function() {
  Template.video.settings = {
    constraints: {
      audio: false,
      video: true
    }
  };

  Template.video.rendered = function() {
    var errorCallback, successCallback;
    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
    Template.video.settings.video = document.querySelector('video');
    successCallback = function(stream) {
      window.stream = stream;
      if (window.URL) {
        Template.video.settings.video.src = window.URL.createObjectURL(stream);
      } else {
        Template.video.settings.video.src = stream;
      }
      return Template.video.settings.video.play();
    };
    errorCallback = function(error) {
      return console.log("navigator.getUserMedia error: ", error);
    };
    return navigator.getUserMedia(Template.video.settings.constraints, successCallback, errorCallback);
  };

  Template.video.events({
    'click #record': function(event, template) {
      var options;
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
      options = {
        type: 'gif',
        video: {
          width: '100',
          height: '100'
        },
        canvas: {
          width: '100',
          height: '100'
        }
      };
      return navigator.getUserMedia(Template.video.settings.constraints, function(stream) {
        var recorder;
        recorder = window.RecordRTC(stream, options);
        recorder.startRecording();
        return setTimeout(function() {
          return recorder.stopRecording(function(gifUrl) {
            return window.open(gifUrl);
          });
        }, 5000);
      });
    }
  });

}).call(this);
